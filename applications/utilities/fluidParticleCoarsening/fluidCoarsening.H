/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

InNamespace
    Foam

Description
    Function prototype for all simple post-processing functions
    e.g. filterinEulerianFieldDivPhi, filterinEulerianFieldMagU etc.

\*---------------------------------------------------------------------------*/

#ifndef fluidCoarsening_H
#define fluidCoarsening_H

#include "fluidParticleCoarsening.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
namespace Foam
{
	void filteringEulerianScalar
	(
		const fvMesh& mesh,
		const labelListListList& stencillistfilter,
		const int& filterwidth,
		const volScalarField& voidfraction_,
		const volScalarField& phi_,
		volScalarField& fphi_ 
	);

	void filteringEulerianVector
	(
		const fvMesh& mesh,
		const labelListListList& stencillistfilter,
		const int& filterwidth,
		const volScalarField& voidfraction_,
		const volVectorField& phi_,
		volVectorField& fphi_ 
	);
	
	void filteringEulerianVariables
	(
		const argList& args, 
		const Time& runTime, 
		const fvMesh& mesh,
		const labelListListList& stencillistfilter,
		const int& filterwidth,
		const volScalarField& voidfraction_,
		const volVectorField& U_,
		const volScalarField& p_,
		volScalarField& baralpf_,
		volVectorField& tildeUf_,
		volScalarField& barPg_,
		const volVectorField& Up_,
		volVectorField& tildeUp_,
		const volVectorField& Us_,
		volVectorField& tildeUs_,		
		const bool EulerEulerFiltering_,
		const bool EulerianVslipBin_  
	);
	
	void filteredEulerEulerDragCoefficient
	(
		cfdemCloud& sm,
		const fvMesh& mesh,
		const volScalarField& p_,	
		const volScalarField& barPg_,
		const volVectorField& Uf_,
		const volVectorField& Up_,		
		const volVectorField& tildeUf_,
		const volVectorField& tildeUp_,		
		const volScalarField& alpf_,
		const volScalarField& baralpf_,		
		const volScalarField& rho_,
		const volVectorField& MappedForce_,		
		vectorField& pargii_,
		const bool& verbose_
	);		
}	

#endif
